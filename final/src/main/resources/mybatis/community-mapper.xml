<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="community">



<!-- 페이징 처리를 위한 공동 SQL -->



	<!-- 커뮤니티 게시글 목록 및 무한스크롤 -->
	
	<!-- <select id="list" resultType="CommunityDto">
	<include refid="top-n-header"></include>
	
		select * from community
		
		<if test="column != null and keyword != null">
			where instr(${column}, #{keyword}) > 0
		</if>
		order by 
		<if test="column != null and keyword != null">
			${column} asc,
		</if>
		community_no DESC 내림차순 정렬코드
		<include refid="top-n-footer"></include>
	</select>
	
	<select id="count" resultType="int">
		select count(*	) from community
		<if test="column != null and keyword != null">
			where instr(${column}, #{keyword}) > 0
		</if>
		order by 
		<if test="column != null and keyword != null">
			${column} asc,
		</if>
		community_no DESC 내림차순 정렬코드
	</select> -->
	
	<!-- 커뮤니티 게시글 목록 -->
	<select id="list" resultType="CommunityDto">
		select
			*
		from community
		order by community_no DESC <!-- 내림차순 정렬코드 -->
	</select>
	

	<!-- 커뮤니티 게시글 등록 -->
	<insert id="insert" >
    INSERT INTO community (
    	
        community_no,
        community_category,
        community_title,
        community_content,
        community_wtime,
        community_utime,
        community_views,
        community_likes,
        community_state,
        community_replies
    ) VALUES (
        community_seq.NEXTVAL,  <!-- 시퀀스 사용 -->
        #{communityCategory},
        #{communityTitle},
        #{communityContent},
        SYSDATE,
        #{communityUtime,jdbcType=TIMESTAMP},
        #{communityViews},
        #{communityLikes},
        #{communityState},
        #{communityReplies}
    )
	</insert>

	<!-- 커뮤니티 게시글 삭제 -->
	<delete id="delete" >
		delete from community
		where community_no = #{communityNo} <!-- and community_writer = #{communityWriter }--><!-- 글 번호 -->
	</delete>

	<!-- 커뮤니티 게시글 수정 -->
	<update id="update" >
		update community
		set
		community_title = #{communityTitle}, <!-- 글 제목 -->
		community_content = #{communityContent, jdbcType=VARCHAR}, <!-- 글 내용 -->
		community_state = #{communityState, jdbcType=VARCHAR},
		community_category = #{communityCategory, jdbcType=VARCHAR} <!-- 공개, 비공개 변경 null값 할 수 있게-->
		where community_no = #{communityNo} <!-- and community_writer = #{communityWriter }--> <!-- 글 번호 -->
	</update>

	<!-- 특정 게시글 상세 조회 -->
    <select id="detail" resultType="CommunityDto">
        select community_no,
               community_category,
               community_title,
               community_content,
               community_wtime,
               community_utime,
               community_views,
               community_likes,
               community_state,
               community_replies
        from community
        where community_no = #{communityNo}
    </select>
    
    
    
    <!-- 페이징을 위한 카운트 계산 구문 -->
    <!-- <select id="complexSearchCount" resultType="int">
    	<include refid="top-n-header"></include>
	
		select * from community
    </select> -->
    
  
    <!-- 게시글 작성수 -->
    <select id="count" resultType="CommunityDto">
    	select count(community_no) from community where writter_id=#{memberId}
    </select>
  
    <!-- 댓글수 나오는거 -->
    <update id="updateReplyCount">
    UPDATE community
    SET community_replies = (SELECT COUNT(*) FROM reply WHERE reply_origin = #{communityNo})
    WHERE community_no = #{communityNo}
</update>
    
    
    
    
    
    
    
    
    
    
    

</mapper>