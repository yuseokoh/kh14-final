<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<!-- 전체 회원 조회 -->
	<select id="list" resultType="MemberDto">
		SELECT * FROM member
	</select>

	<!-- 특정 컬럼과 키워드를 이용한 검색 -->
	<select id="search" resultType="MemberDto">
		SELECT * FROM member WHERE instr(${column}, #{keyword}) > 0
	</select>

	<!-- 조건을 이용한 검색 -->
	<select id="listSearch" resultType="MemberDto"> SELECT * FROM member <if
			test="column != null and keyword != null">
			WHERE instr(${column}, #{keyword}) > 0
		</if>
	</select>

	<!-- 복합 검색 -->
	<select id="complexSearch" resultType="MemberDto">
		<include refid="top-n-header" /> SELECT * FROM member <where>
			<if test="memberId != null">
				AND member_id LIKE #{memberId} || '%'
			</if>
			<if test="memberNickname != null">
				AND member_nickname LIKE #{memberNickname} || '%'
			</if>
			<if test="memberBirth != null">
				AND member_birth = #{memberBirth}
			</if>
			<if test="memberContact != null">
				AND instr(member_contact, #{memberContact}) > 0
			</if>
			<if test="memberEmail != null">
				AND instr(member_email, #{memberEmail}) > 0
			</if>
			<choose>
				<when test="minMemberPoint != null and maxMemberPoint != null">
		AND member_point BETWEEN #{minMemberPoint} AND #{maxMemberPoint}
				</when>
				<when test="minMemberPoint != null">
                    <![CDATA[ AND member_point >= #{minMemberPoint} ]]>
                </when>
				<when test="maxMemberPoint != null">
                    <![CDATA[ AND member_point <= #{maxMemberPoint} ]]>
                </when>
			</choose>

			<choose>
				<when test="beginMemberJoin != null and endMemberJoin != null">
		AND (member_join BETWEEN to_date(#{beginMemberJoin} || ' ' ||
		'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
					AND to_date(#{endMemberJoin} || ' ' || '23:59:59',
		'YYYY-MM-DD HH24:MI:SS'))
				</when>
				<when test="beginMemberJoin != null">
                    <![CDATA[ AND member_join >= to_date(#{beginMemberJoin} || ' ' || '00:00:00', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
				<when test="endMemberJoin != null">
                    <![CDATA[ AND member_join <= to_date(#{endMemberJoin} || ' ' || '23:59:59', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
			</choose>
			<choose>
				<when test="beginMemberLogin != null and endMemberLogin != null">
		AND (member_login BETWEEN to_date(#{beginMemberLogin} || ' ' ||
		'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
					AND to_date(#{endMemberLogin} || ' ' || '23:59:59',
		'YYYY-MM-DD HH24:MI:SS'))
				</when>
				<when test="beginMemberLogin != null">
                    <![CDATA[ AND member_login >= to_date(#{beginMemberLogin} || ' ' || '00:00:00', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
				<when test="endMemberLogin != null">
                    <![CDATA[ AND member_login <= to_date(#{endMemberLogin} || ' ' || '23:59:59', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
			</choose>
			<if test="memberLevelList != null and memberLevelList.size() > 0">
		AND member_level IN <foreach item="memberLevel"
					collection="memberLevelList" open="(" separator=","
					close=")">
					#{memberLevel}
				</foreach>
			</if>
			<if test="memberAddress != null">
				AND (
				instr(member_post, #{memberAddress}) > 0
				OR instr(member_address1, #{memberAddress}) > 0
				OR instr(member_address2, #{memberAddress}) > 0
				)
			</if>
		</where>
        <choose>
			<when test="orderList != null and orderList.size() > 0"> ORDER BY <foreach
					item="orderItem" collection="orderList" separator=",">
		${orderItem}
				</foreach>
			</when>
			<otherwise>
				ORDER BY member_id ASC
			</otherwise>
		</choose>
        <include
			refid="top-n-footer" />
	</select>

	<!-- 페이징을 위한 카운트 계산 구문 -->
	<select id="complexSearchCount" resultType="int"> SELECT count(*) FROM
		member <where>
			<if test="memberId != null">
				AND member_id LIKE #{memberId} || '%'
			</if>
			<if test="memberNickname != null">
				AND member_nickname LIKE #{memberNickname} || '%'
			</if>
			<if test="memberBirth != null">
				AND member_birth = #{memberBirth}
			</if>
			<if test="memberContact != null">
				AND instr(member_contact, #{memberContact}) > 0
			</if>
			<if test="memberEmail != null">
				AND instr(member_email, #{memberEmail}) > 0
			</if>
			<choose>
				<when test="minMemberPoint != null and maxMemberPoint != null">
		AND member_point BETWEEN #{minMemberPoint} AND #{maxMemberPoint}
				</when>
				<when test="minMemberPoint != null">
                    <![CDATA[ AND member_point >= #{minMemberPoint} ]]>
                </when>
				<when test="maxMemberPoint != null">
                    <![CDATA[ AND member_point <= #{maxMemberPoint} ]]>
                </when>
			</choose>
			<choose>
				<when test="beginMemberJoin != null and endMemberJoin != null">
		AND (member_join BETWEEN to_date(#{beginMemberJoin} || ' ' ||
		'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
					AND to_date(#{endMemberJoin} || ' ' || '23:59:59',
		'YYYY-MM-DD HH24:MI:SS'))
				</when>
				<when test="beginMemberJoin != null">
                    <![CDATA[ AND member_join >= to_date(#{beginMemberJoin} || ' ' || '00:00:00', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
				<when test="endMemberJoin != null">
                    <![CDATA[ AND member_join <= to_date(#{endMemberJoin} || ' ' || '23:59:59', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
			</choose>
			<choose>
				<when test="beginMemberLogin != null and endMemberLogin != null">
		AND (member_login BETWEEN to_date(#{beginMemberLogin} || ' ' ||
		'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
					AND to_date(#{endMemberLogin} || ' ' || '23:59:59',
		'YYYY-MM-DD HH24:MI:SS'))
				</when>
				<when test="beginMemberLogin != null">
                    <![CDATA[ AND member_login >= to_date(#{beginMemberLogin} || ' ' || '00:00:00', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
				<when test="endMemberLogin != null">
                    <![CDATA[ AND member_login <= to_date(#{endMemberLogin} || ' ' || '23:59:59', 'YYYY-MM-DD HH24:MI:SS') ]]>
                </when>
			</choose>
			<if test="memberLevelList != null and memberLevelList.size() > 0">
		AND member_level IN <foreach item="memberLevel"
					collection="memberLevelList" open="(" separator=","
					close=")">
					#{memberLevel}
				</foreach>
			</if>
			<if test="memberAddress != null">
				AND (
				instr(member_post, #{memberAddress}) > 0
				OR instr(member_address1, #{memberAddress}) > 0
				OR instr(member_address2, #{memberAddress}) > 0
				)
			</if>
		</where>
	</select>

	<!-- 회원 등록(가입) -->
	<insert id="add" parameterType="MemberDto">
		INSERT INTO member (
		member_id,
		member_pw,
		member_email,

		member_level
		) VALUES (
		#{memberId},
		#{memberPw},
		#{memberEmail},
		#{memberLevel}
		)
	</insert>

	<!-- 회원 상세 조회 -->
	<select id="find" parameterType="string" resultType="MemberDto">
		SELECT * FROM member WHERE member_id = #{memberId}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="changePw">
		UPDATE member SET member_pw = #{memberPw} WHERE member_id = #{memberId}
	</update>

	<!-- 회원 정보 수정 -->
	<update id="edit"> UPDATE member <set>
			<if test="memberNickname != null">member_nickname =
		#{memberNickname},</if>
			<if test="memberEmail != null">member_email = #{memberEmail},</if>
			<if test="memberPost != null">member_post = #{memberPost},</if>
			<if test="memberAddress1 != null">member_address1 =
		#{memberAddress1},</if>
			<if test="memberAddress2 != null">member_address2 =
		#{memberAddress2},</if>
			<if test="memberContact != null">member_contact = #{memberContact},</if>
			<if test="memberBirth != null">member_birth = #{memberBirth},</if>
			<if test="memberLevel != null">member_level = #{memberLevel},</if>
			<if test="verificationToken != null">verification_token =
		#{verificationToken},</if>
			<if test="emailVerified != null">email_verified = #{emailVerified},</if>
			<if test="memberPoint != null">member_point = #{memberPoint}</if>
		</set>
		WHERE member_id = #{memberId} </update>

	<!-- 회원 정보 삭제 -->
	<delete id="remove">
		DELETE FROM member WHERE member_id = #{memberId}
	</delete>

	<!-- 최종 로그인 시각 갱신 -->
	<update id="updateLoginTime">
		UPDATE member SET member_login = sysdate WHERE member_id = #{memberId}
	</update>
	<!-- 최종 로그아웃 시각 갱신 -->
	<update id="updateLogoutTime">
    UPDATE member SET member_logout = sysdate WHERE member_id = #{memberId}
</update>


	<!-- 이메일로 회원 찾기 -->
	<select id="findByEmail" parameterType="string" resultType="MemberDto">
		SELECT * FROM member WHERE member_email = #{memberEmail}
	</select>

	<!-- 자주 사용하는 SQL 조각들 (Top N Query) -->
	<sql id="top-n-header">
		<if test="beginRow != null and endRow != null">
			SELECT * FROM (
			SELECT rownum rn, TMP.* FROM (
		</if>
	</sql>

	<sql id="top-n-footer">
		<if test="beginRow != null and endRow != null">
			) TMP
			)
			WHERE rn BETWEEN #{beginRow} AND #{endRow}
		</if>
	</sql>

</mapper>
