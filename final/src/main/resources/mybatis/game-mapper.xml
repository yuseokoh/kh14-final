<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="game">
    <!-- 등록 -->
    <insert id="insert" parameterType="GameDto">
	    <selectKey keyProperty="gameNo" resultType="int" order="BEFORE">
	        select game_seq.nextval from dual
	    </selectKey>
        insert into game(
            game_no,
            game_title,
            game_price,
            game_developer,
            game_publication_date,
            game_discount,
            game_category,
            game_grade,
            game_theme,
            game_description,
            game_short_description,
            game_user_score,
            game_review_count,
            game_platforms,
            game_system_requirement
        )
        values(
        	#{gameNo},
            #{gameTitle},
            #{gamePrice},
            #{gameDeveloper},
            #{gamePublicationDate},
            #{gameDiscount},
            #{gameCategory},
            #{gameGrade},
            #{gameTheme},
            #{gameDescription},
            #{gameShortDescription},
            #{gameUserScore},
            #{gameReviewCount},
            #{gamePlatforms, jdbcType=VARCHAR},
            #{gameSystemRequirement}
        )
    </insert>

    <!-- 목록 -->
    <select id="list" resultType="gameDto">
        select * from game order by game_no asc
    </select>

    <!-- 조회 -->
    <select id="detail" resultType="gameDto">
        select * from game where game_no = #{gameNo}
    </select>
    
    <!-- 검색 -->
	<select id="search" resultType="gameDto">
	    select * from game 
	    where instr(${column}, #{keyword}) > 0 
	    order by game_no asc
	</select>

    <!-- 수정 -->
    <update id="fix">
        update game
        set
            game_title = #{gameTitle},
            game_price = #{gamePrice},
            game_developer = #{gameDeveloper},
            game_publication_date = #{gamePublicationDate},
            game_discount = #{gameDiscount},
            game_category = #{gameCategory},
            game_grade = #{gameGrade},
            game_theme = #{gameTheme},
            game_description = #{gameDescription},
            game_short_description = #{gameShortDescription},
            game_user_score = #{gameUserScore},
            game_review_count = #{gameReviewCount},
            game_platforms = #{gamePlatforms},
            game_system_requirement = #{gameSystemRequirement}
        where game_no = #{gameNo}
    </update>

    <!-- 삭제 -->
    <delete id="del">
        delete from game where game_no = #{gameNo}
    </delete>

    <!-- 회원별 게임 번호 조회 -->
    <select id="findGameNo" resultType="gameDto">
        select game_no from game where member_id = #{memberId}
    </select>
    
    <!-- 게임 평점(score) 업데이트 -->
    <update id="updateScore">
    	update game
    	set game_user_score = (
    		select avg(score)
    		from member_score
    		where game_no = #{gameNo}	
    	)
    	where game_no = #{gameNo}
    </update>
    
    <!-- 게임 리뷰카운트 업데이트 -->
    <update id="updateReviewCount">
    	update game
    	set game_review_count = (
    		select count(*)
    		from member_review
    		where game_no = #{gameNo}
    		and review_status = 'active'
    	)
    	where game_no = #{gameNo}
    </update>
</mapper>